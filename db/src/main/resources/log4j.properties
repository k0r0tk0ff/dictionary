# Direct log messages to a log file
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=my.log
log4j.appender.file.MaxFileSize=1MB
log4j.appender.file.MaxBackupIndex=1
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n


# Direct log messages to stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n


# Root logger option
# warn, error and fatal will be send to log.
#log4j.rootLogger=INFO, file, stdout
log4j.rootLogger=INFO, file, stdout


#Settinfs for log for classes
#Pincip
#log4j.logger.<packet_name>.<class_name>= <level>, <logger_name>
# or
#log4j.logger.<packet_name>= <level>

#How to use log -
#private static final Logger log = Logger.getLogger(CurrentClass.class);

#log.debug("Start processing");
#if (log.isDebugEnabled()) {
#log.debug("Result: "+result);
#}
#try {
# some_code
#} catch (Exception e) {
#log.error("Something failed", e);
#}
#log.debug("done");